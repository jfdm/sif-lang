-- ---------------------------------------------------- [ Privilege Escalation ]

language "Privilege Escalation" as privilegeescalation

patterns

compartmentalisation := Pattern("Compartmentalisation")
distResponsibility := Pattern("Distributed Responsiblitly")
exeDomain := Pattern("Execution Domain")

controlledProcCreation := Pattern("Controlled Process Creation")
secureResourcePooling := Pattern("Secure Resource Pooling")

controlledObjectFactory := Pattern("Controlled Object Factory")

controlledVirtualAddressSpace := Pattern("Controlled Virtual Address Space")

relations

compartmentalisation -> distResponsibility : "Efficient Partition"

distResponsibility -> compartmentalisation : "Re-Partition"
distResponsibility -> exeDomain : "Restrict Resources"

exeDomain -> controlledProcCreation : "Restrict Privilege Inheritance"
exeDomain -> controlledObjectFactory : "Protect Object Rights"
exeDomain -> controlledVirtualAddressSpace : "Protect Virtual Memory"

controlledProcCreation -> secureResourcePooling : "Limit Process Lifetime"

-- Munawar Hafiz, Paul Adamczyk, and Ralph E. Johnson. 2012. Growing a
-- pattern language (for security). In Proceedings of the ACM
-- international symposium on New ideas, new paradigms, and
-- reflections on programming and software (Onward! '12). ACM, New
-- York, NY, USA, 139-158. DOI=10.1145/2384592.2384607
