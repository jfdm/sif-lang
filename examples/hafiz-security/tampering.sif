-- --------------------------------------------------------------- [ Tampering ]

language "Tampering" as tampering

from privilegeescalation import distResponsibility
from privilegeescalation import exeDomain

patterns

trustedPartitioning := Pattern("Trust Partitioning")
checkpointedSys := Pattern("Checkpointed System")
safeDataStruct := Pattern("Safe Data Structure")
serverSandbox := Pattern("Server Sandbox")
chroot := Pattern("Chroot Jail")
uniqueLocWriteReq := Pattern("Unique Location for Each Write Request")

relations

distResponsibility -> trustedPartitioning : "Communicate between processes"
distResponsibility -> uniqueLocWriteReq : "Concurrent write race"
distResponsibility -> serverSandbox : "Constrain Environment"

exeDomain -> serverSandbox : "Constrain Environment"
exeDomain -> safeDataStruct : "Data safety"
exeDomain -> checkpointedSys : "Graceful restart"

serverSandbox -> chroot : "Sandbox Processes"


-- Munawar Hafiz, Paul Adamczyk, and Ralph E. Johnson. 2012. Growing a
-- pattern language (for security). In Proceedings of the ACM
-- international symposium on New ideas, new paradigms, and
-- reflections on programming and software (Onward! '12). ACM, New
-- York, NY, USA, 139-158. DOI=10.1145/2384592.2384607
