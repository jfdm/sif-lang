sif problem

> How to authenticate entities.
tokenAuth <- Problem "Token-Based Authentication"

--  --------------------------------------------------------------- [ Contexts ]

> How to authenticate without relying on technology.
socio <- Context "Non-Technical"

> How to perform authentication using a mixture of technology and
> human interactions.
sociotech <- Context "Socio-Technical"

> How to perform authentication only using technical mechanisms.
tech <- Context "Technical"

--  ----------------------------------------------------------- [ Requirements ]

> Solutions must have a means to enroll entities into the
> authentication procedure.
enrollment <- Functional "Enrollment"

> Solutions must consist of an authentication step.
authStep <- Functional "Authentication Mechanism"

> The authentication step must be changable and re-enrollment
> possible.
changable <- Functional "Changable"

> Authentication must be consistent and that entities with up-to-date
> authentication details should authentication.
consistent   <- Reliability "Authentication happens"

> Processing authentication requests must not take forever, and be
> timely in their duration.
timely <- Performance "Timely Authentication"

> Entities that repeatedly try to authenticate with incorrect data
> should be locked out of the system for some predefined period of
> time.
lockout <- Functional "Able to set limited access attempts"

> the ownership factors: Something the user has (e.g., wrist band, ID
> card, security token, cell phone with built-in hardware token,
> software token, or cell phone holding a software token)
ownership <- Functional "Ownership Factor"

--  -------------------------------------------------------------------- [ EOF ]
