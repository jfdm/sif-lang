sif problem

> Given an abstract description of an data structure together with
> several concrete implementations of these data structure.  The problem
> is how to present, create, serve, and work with data using an abstract
> representation without exposing their concrete implementation.

polymorph <- Problem "Polymorphic Data Usage"

> The solution must provide separate representation and implementation
> data structures.

separateObjects <- Functional "Separate Data Structures"

> The solution must allow for the generation of data structure
> instances without knowledge of the underlying implementation.

agnosticObjectGeneration <- Functional "Agnostic Generation of Objects"


> The creation and use of data instances should be closed for modification.

closedForModification <- Functional "Closed for Modification"


> There should be an ability to replace the method of creation easily.

flexibleReplacement <- Functional "Flexible Replacement"


> The resulting code should have minimal dependencies.

minimalDependancies <- Supportability "Minimal Dependencies"

> The solution should limit the use of language specific features.

languageAgnostic <- Functional "Language Agnostic"
