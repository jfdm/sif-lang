sif solution

Description """PEPs addresses policy enforcement with a uniform way to enforce a variety of business and management policies."""

> Policy Enforcement Points provide a uniform way to enforce a variety
> of business and management policies.
>
> Policy Engineering is concerned with the creation, enforcement, and
> storage of access policies.  Separating and distributing these
> components across several modules allows for the act of enforcing
> access policies to also be distributed.  Such a separation also
> allows for a flexible and adaptable solution to access control.
>
> Resources are protected by /Policy Enforcement Points/ (PEPs).  Upon
> access to a resource by a subject, the PEP will consult the /Policy
> Decision Point/ (PDP) to obtain the access rights for the subject,
> and the access policy for the resource. Should the subject have
> sufficient rights to access the resource, then access will be
> granted otherwise, access is denied.
>
> Within this solution policies, and their components, are stored
> within a repository made accessible to the entities involved.
> Client's can cache existing policies within a policy pool, or upon
> creation by a =PolicyFactory= register the policy with the
> repository.  The repository can also store predefined policies.
> Further, this solution also allows for the policies to be externally
> defined using a DSL.
>
> The distribution of these factors across several components aides in
> the flexibility and adaptability of the solution.

Solution "Policy Enforcement Points" solves policyenforce in std {

  > Central to the idea of PEPs is the separation of policy
  > enforcement, from policy creation, and policy decision.  It with
  > this distribution that a flexible solution to managing access
  > control can be granted.
  Property "Distributed Policy Engineering" {
    Trait "Component Separation" is Satisfied {
	  Affects {
	      Helps efficiency by "specialist components run separately"
		, SomeNeg comprehensible by "too much knowledge"
		, SomePos customisable by "separate components"
		, SomeNeg enforcement by "ensuring correct components talk to each other"
		, SomeNeg timely by "lack of access to correct components"
      }
    }
  }

  > Policy creation has been engineered such that policies can be created on demand or cached for use later.
  Property "Policy Creation" {
    > Pre-defined policies, and the policy pool facilitate quick access to policies once they are created.
    Trait "Policy Caching" is Satisfied {
	  Affects {
	      Helps flexible by "offering quick access to already created policies."
	    , Helps efficiency by "reducing the overhead for common policies."
		, SomeNeg efficiency by "searching through a store."
		, Helps prebuilt by "allowing offline policy creation"
	  }
    }

    > Policies need not be specified prior to runtime. This flexibility allows for policies to be generated when required.
    Trait "On Demand Policies" is Satisfied {
	  Affects {
	      Helps flexible by "on-the-fly policy creation"
		, Helps customisable by "generated by client."
		, SomeNeg efficiency by "policies have to be generated."
      }
    }
  }

  > The policy repository provides storage for pre-defined policies
  > and policy elements. The repository is called by the policy
  > enforcement points and policy decision points when making a
  > decision over access.
  Property "Policy Repository" {
    Trait "Central Location" is Satisfied {
      Affects {
	    Makes central by "offering a single location"
      }
    }
  }

  > The policy dsl allows for machine checkable polices.
  Property "Policy DSL" {
    Trait "External Creation" is Satisfied {
	  Affects {
	      Helps flexible by "allowing customisation"
		, Helps customisable by "allowing customisation"
  	    , SomeNeg comprehensible by "giving people a language to learn."
		, SomeNeg efficiency by "Parsing possibly complicated policies, and checking they are valid."
      }
    }
  }

  > The solution does not depend on language specific tooling.
  Property "Implementation Agnostic" {
    Trait "Language Agnostic" is Satisfied {
	  Affects {
	    Makes agnosticDep by "using not language specific tooling."
      }
    }
  }

  > Policy enforcement through PDP and PEP working together.
  Property "The Act of Policy Enforcement" {
    Trait "PEP" is Satisfied {
	  Affects {
	    Makes enforcement by "offering a restriction on access"
      }
    }
  }
}
